# Required nodes from outside the framework:
# population
# co2_unit_price
# net_emissions
# total_cost
# Required dimensions from outside the framework:
# ghg
# scope
# transport_mode
# pollutant
# transport_pollutant
# energy_carrier
# stakeholder
# Required parameters from outside the framework:
# population_growth_rate

nodes:
- id: transport_emissions
  name: Transport emissions
  description: This module (all nodes upstream) is based on the excel sheets 1.0 - 1.4.2 Passenger trans. levers.
    Note! MIA = Model - inputs & assumptions, CDR = City data - Data requests.
    In the default datasets, I think we should have historical values for years 2018-2023.
    Then, the forecast values do not start before 2024 due to the defaults.
  type: simple.EmissionFactorActivity
  quantity: emissions
  unit: kt/a
  output_nodes:
  - id: net_emissions
    from_dimensions:
    - id: transport_mode
      flatten: true
    - id: energy_carrier
      flatten: true
  input_dimensions: [transport_mode, ghg, scope, energy_carrier]
  output_dimensions: [transport_mode, ghg, scope, energy_carrier]
  input_nodes:
  - id: vehicle_kilometres
    to_dimensions:
    - id: ghg
      categories: [co2e]
    - id: scope
      categories: [scope1]
    - id: transport_mode
    - id: energy_carrier
  - id: transport_emission_factor
    from_dimensions:
    - id: energy_carrier
    - id: pollutant
      categories: [co2]
      flatten: true
    to_dimensions:
    - id: transport_mode
    - id: ghg
      categories: [co2e]
    - id: scope
      categories: [scope1]
  color: '#014B30'
#  color: '#ff4f57'
#  color: '#0047b6'

- id: baseline_year_fleet_emission_factor_pre
  name: Baseline year car and bus fleet emission factor before splitting
  description: 'TODO Data from Data 1&2 Tranportation, E174:AF179. TODO Upstream calculations based on Model inputs & 
    assumptions F194 and F207 needs to be included in the model. Emission factor is a weighted average existing and
    new car and bus fleet, where 0.5 * X % is renewed annually (X = city data request D47, share of fleet that is less than 2 years old). The current emission factors are asked from the user (City data request D34:D43) but the new
    emission factors come from data; the weighted average of the two trends is calculated.
    MATIAS: DO NOT START FROM HERE; emission fractions are still under construction.
    <p>FROZEN SCENARIO: Emission factors are constant across time.</p>
    <p>DIMENSIONS: pollutant (CO2, NOx, PM2.5, PM10 combustion and other). transport_mode (cars, buses, trains)</p>
    <p>Bus emission factor is calculated differently than cars, but the differences a minor and we attempt to apply uniform calculations. Cars are calculated by<br>=L174*(1-M$172)+M164*M$172<br>while buses are calculated by
    =IF(($L242*(1-SUM($L$241:N$241))+N233*SUM($L$241:N$241))>M242,M242,($L242*(1-SUM($L$241:N$241))+N233*SUM($L$241:N$241)))<br>
    There are a few key differences: 1) the existing fleet in the formula is that of year 2018, while with cars it is the previous year; 2) the percentage change is the total from 2018, while with cars it is from the previous year; 3) bus emission factor cannot increase, which would happen if the baseline emission factor (given by the user) would be larger than the new bus emission factor. There differences 1 & 2 are coherent, but it also results in a situation where the cohorts between 2019 and the previous year (inclusive) suddenly disappear and are replaced by current year fleet. However, this is not a problem because new bus fleet does not improve and the emission factors are the same for evary year. Difference 3 is handled (TODO!) by replacing the new emission factor with the baseline year value if it is smaller, so that at the actual calculation there is no need to consideer this any more.</p>'
  type: gpc.DatasetNode
  quantity: emission_factor
  unit: g/vkm
  input_dimensions: [transport_pollutant, transport_mode]
  output_dimensions: [transport_pollutant, transport_mode]
  input_datasets:
  - id: nzc/defaults
  params:
    gpc_sector: baseline year fleet emission factor

- id: new_fleet_emission_factor_pre
  name: New fleet emission factor before splitting
  description: '<p>Emission factors for new cars following the EURO 6 standard. (EU: Cars and Light Trucks. 
    https://www.dieselnet.com/standards/eu/ld.php) TODO Implement as described below. Details of the NZC excel calculations are in Data - 1&2 Transportation!M174.<br>
    This node is needed in vehicle fleet upgrade. The idea is that there are several cohorts i of vehicles, each faving its own emission factor. The first cohort comes from node baseline_year_fleet_emission_factor and it contains all cars that were in the fleet in the baseline. Each year after that, a new cohort of cars enter the fleet, each having the emission factor that was for that year in node new_fleet_emission_factor. Each cohort has a proportion of P<sub>i</sub> among the fleet. The average emission factor is therefore<br>
    E<sub>t</sub> = sum<sub>i</sub>(E<sub>i,t</sub> * P<sub>i,t</sub>) <br>where i is class and t is timepoint. This is complicated by gradual removal of vehicle classes from the fleet such that<br>
    N<sub>i,t</sub> = N<sub>i,t0</sub> * product(s<sub>i,0</sub>, ..., s<sub>i,t</sub>), <br>where s<sub>i,t</sub> are the survival rates, N<sub>i,t</sub> is the number of cars in a cohort at timepoint t, t0 is the timepoint of entry for that cohort, and proportion P<sub>i,t</sub> = N<sub>i,t</sub>/sum<sub>i</sub>(N<sub>i,t</sub>).
    It must be noted that for each timepoint, there are the existing cohorts and a new cohort that enters in that year.</p>
    <p>In this use case, it is important to separate these cohorts becoause the emission factor is decreasing in time.
    The computation logic is that after a vehicle has entered the fleet, it has the same survival probability as all other
    cars in the fleet. (Not realistic but that is how NZC excel works)</p>
    Finally, we assume that E is constant for each vehicle as long as it is in the fleet. 
    This is handled by looking at each E<sub>i,t</sub> cohort until the last time point.'
  type: gpc.DatasetNode
  quantity: emission_factor
  unit: g/vkm
  input_dimensions: [transport_pollutant, transport_mode]
  output_dimensions: [transport_pollutant, transport_mode]
  input_datasets: [nzc/defaults]
  params:
    gpc_sector: new fleet emission factor

- id: transport_pollutant_split
  name: Transport pollutant split
  description: Particulate pollutants (PM2.5 and PM10) are entered as totals by the user. However, calculations are based on a split between combustion pollutants (from tailpipe) and wear & tear (dust from breaks and tyres). This node has the fractions of these subcategories. Note! The NZC excel treats combustion and non-combustion fractions differently. Non-combustion value is taken from the user multiplied by its split fraction and assumed to stay constant across time. Combustion value for new cars comes from an EU report and is assumed to improve over time. The difference is substantial, as the default for current PM10 is 30 mg/vkm, while the new fleet assumes 8 mg/vkm. Here, we use the lower value, which is consistent with the calculation logic.
  type: gpc.DatasetNode
  quantity: fraction
  unit: dimensionless
  input_dimensions: [pollutant, transport_pollutant, energy_carrier]
  output_dimensions: [pollutant, transport_pollutant, energy_carrier]
  input_datasets: [nzc/defaults]
  params:
    gpc_sector: transport pollutant split

- id: baseline_year_fleet_emission_factor
  name: Baseline year fleet emission factor
  type: simple.MultiplicativeNode
  quantity: emission_factor
  unit: g/vkm
  input_dimensions: [pollutant, transport_pollutant, transport_mode, energy_carrier]
  output_dimensions: [pollutant, transport_pollutant, transport_mode, energy_carrier]
  input_nodes:
  - id: baseline_year_fleet_emission_factor_pre
    tags: [non_additive]
    to_dimensions:
    - id: transport_pollutant
    - id: transport_mode
  - id: transport_pollutant_split
    to_dimensions:
    - id: pollutant
    - id: transport_pollutant
    - id: energy_carrier

- id: new_fleet_emission_factor
  name: New fleet emission factor
  type: simple.MultiplicativeNode
  quantity: emission_factor
  unit: g/vkm
  input_dimensions: [pollutant, transport_pollutant, transport_mode, energy_carrier]
  output_dimensions: [pollutant, transport_pollutant, transport_mode, energy_carrier]
  input_nodes:
  - id: new_fleet_emission_factor_pre
    tags: [non_additive]
    to_dimensions:
    - id: transport_pollutant
    - id: transport_mode
  - id: transport_pollutant_split
    to_dimensions:
    - id: pollutant
    - id: transport_pollutant
    - id: energy_carrier

- id: remaining_old_fleet
  name: Remaining old fleet
  type: costs.ExponentialNode
  description: The fraction of remaining car and bus fleet that existed in 2018. TODO Should this be made an action?
  quantity: fraction
  unit: '%'
  historical_values: [[2018, 100.0]]
  params:
  - id: annual_change
    value: 5
    unit: '%'
    min_value: 0
    max_value: 10
    is_customizable: true
    is_visible: true
  - id: is_decreasing_rate
    value: true

- id: fleet_replacement_rate
  name: Fleet replacement rate
  description: This node is needed when the new fleet replacement node class exists. TODO! It is not clear how the user input should be converted to this dataset, as it is different format for cars and buses.
  type: gpc.DatasetNode
  quantity: fraction
  unit: dimensionless
  input_dimensions: [transport_mode]
  output_dimensions: [transport_mode]
  input_datasets: [nzc/defaults]
  params:
    gpc_sector: old fleet reduction rate

- id: new_fleet_fraction
  name: New fleet fraction
  type: simple.AdditiveNode
  quantity: fraction
  unit: '%'
  input_nodes:
  - id: remaining_old_fleet
    tags: [complement]

- id: fleet_emission_factor
  name: Fleet emission factor
  description: Emission factor for the current car and bus fleet. TODO Note that the calculation is not identical to what is in NZC excel, because replicating that requires a new node type that will be build later. See New fleet emission factor for details.
  type: formula.FormulaNode
  quantity: emission_factor
  unit: g/vkm
  input_dimensions: [pollutant, transport_mode, energy_carrier]
  output_dimensions: [pollutant, transport_mode, energy_carrier]
  input_nodes:
  - id: baseline_year_fleet_emission_factor
    from_dimensions:
    - id: transport_pollutant
      flatten: true
    to_dimensions:
    - id: pollutant
    - id: transport_mode
    - id: energy_carrier
  - id: new_fleet_emission_factor
    from_dimensions:
    - id: transport_pollutant
      flatten: true
    to_dimensions:
    - id: pollutant
    - id: transport_mode
    - id: energy_carrier
  - id: remaining_old_fleet
    to_dimensions: []
  - id: new_fleet_fraction
    to_dimensions: []
  params:
  - id: formula
    value: baseline_year_fleet_emission_factor * remaining_old_fleet + new_fleet_emission_factor * new_fleet_fraction

- id: vehicle_electricity_factor
  name: Vehicle electricity factor
  description: Electricity consumed per one vehicle-kilometre of various vehicle types.
  type: gpc.DatasetNode
  quantity: energy_factor
  unit: kWh/vkm
  input_dimensions: [transport_mode, energy_carrier]
  output_dimensions: [transport_mode, energy_carrier]
  input_datasets: [nzc/defaults]
  output_nodes:
  - id: train_emission_factor
    to_dimensions:
    - id: transport_mode
    - id: energy_carrier
  params:
    gpc_sector: Electricity consumption, average vehicle

- id: train_emission_factor  # FIXME Calculate electricity emissions separately for all transport modes.
  name: Train emission factor
  description: TODO Update calculations
  type: simple.MultiplicativeNode
  quantity: emission_factor
  unit: g/vkm
  input_dimensions: [pollutant, transport_mode, energy_carrier]
  output_dimensions: [pollutant, transport_mode, energy_carrier]
  input_nodes:
  - id: electricity_production_emission_factor
    to_dimensions:
    - id: pollutant
    - id: energy_carrier

- id: transport_emission_factor
  name: Transport emission factor
  description: TODO Update calculations
  type: simple.AdditiveNode
  quantity: emission_factor
  unit: g/vkm
  input_dimensions: [pollutant, transport_mode, energy_carrier]
  output_dimensions: [pollutant, transport_mode, energy_carrier]
  input_nodes:
  - id: train_emission_factor
  - id: fleet_emission_factor

- id: transport_air_pollution_emissions
  name: Transport air pollution emissions
  type: simple.MultiplicativeNode # EmissionFactorActivity
  quantity: emissions
  unit: t/a
  input_dimensions: [pollutant, transport_mode, energy_carrier]
  output_dimensions: [pollutant, transport_mode, energy_carrier]
  input_nodes:
  - id: transport_emission_factor
    from_dimensions:
    - id: pollutant
      categories: [pm25_combustion, pm10_combustion, pm25_wear_tear, pm10_wear_tear, nox]
    to_dimensions:
    - id: pollutant
    - id: transport_mode
    - id: energy_carrier
  - id: vehicle_kilometres
    to_dimensions:
    - id: transport_mode
    - id: energy_carrier

- id: vehicle_kilometres
  name: Vehicle kilometres
  type: simple.MultiplicativeNode
  quantity: mileage
  unit: Mvkm/a
  input_dimensions: [transport_mode, energy_carrier]
  output_dimensions: [transport_mode, energy_carrier]
  input_nodes:
  - id: passenger_kilometres
    to_dimensions:
    - id: transport_mode
  - id: transport_efficiency
    to_dimensions:
    - id: transport_mode
    tags: [geometric_inverse]
  - id: transport_energy_carrier_shares

- id: transport_energy_carrier_shares
  name: Transport energy carrier shares
  type: gpc.DatasetNode
  quantity: fraction
  unit: dimensionless
  input_dimensions: [energy_carrier, transport_mode]
  output_dimensions: [energy_carrier, transport_mode]
  input_datasets:
  - id: nzc/defaults  # FIXME It should be possible to define units dimensionless for dataset and % for node
    forecast_from: 2023
  params:
    gpc_sector: transport energy carrier shares

- id: transport_electricity_consumption
  name: Transport electricity consumption
  type: simple.MultiplicativeNode
  quantity: energy
  unit: GWh/a
  input_dimensions: [transport_mode, energy_carrier]
  output_dimensions: [transport_mode, energy_carrier]
  input_nodes:
  - id: vehicle_kilometres
    from_dimensions:
    - id: energy_carrier
      categories: [electricity]
  - id: vehicle_electricity_factor
    to_dimensions:
    - id: transport_mode
    - id: energy_carrier
  output_nodes:
  - id: total_electricity_consumption
    from_dimensions:
    - id: transport_mode
      flatten: true

- id: transport_efficiency
  name: Transport efficiency
  description: 'Transport efficiency comes from CDR D28:d30 via MIA D188:190. It is constant across time, except if modified by an action.'
  type: gpc.DatasetNode
  quantity: occupancy_factor
  unit: pkm/vkm
  input_dimensions: [transport_mode]
  output_dimensions: [transport_mode]
  input_datasets: [nzc/defaults]
  params:
    gpc_sector: transport efficiency

- id: passenger_kilometres_pre
  name: Passenger kilometres data
  description: We assume fixed amount per person per day. Data comes from CDR D22:D25 via MIA F182:F185.
#  type: costs.ExponentialNode  # FIXME Check growth rate
  type: gpc.DatasetNode
  quantity: mileage
  unit: Mpkm/a
  input_datasets:
  - id: nzc/defaults
    forecast_from: 2023
  input_dimensions: [transport_mode]
  output_dimensions: [transport_mode]
  params:
#  - id: annual_change
#    ref: population_growth_rate
    gpc_sector: passenger kilometers

- id: passenger_kilometres
  name: Passenger kilometres
  type: simple.MultiplicativeNode
  quantity: mileage
  unit: Mpkm/a
  input_dimensions: [transport_mode]
  output_dimensions: [transport_mode]
  input_nodes:
  - id: passenger_kilometres_pre
    tags: [non_additive]
    from_dimensions:
    - id: transport_mode
      flatten: true
    to_dimensions: []
  - id: motorised_transport_change
    tags: [complement]
  - id: transport_mode_fraction

- id: motorised_transport_index
  name: Motorised transport index
  type: gpc.DatasetNode
  quantity: fraction
  unit: dimensionless
  input_dimensions: [transport_mode]
  output_dimensions: [transport_mode]
  input_datasets: [nzc/defaults]
  params:
    gpc_sector: motorised transport index

- id: motorised_transport_change
  name: Motorised transport change
  description: Positive values are reductions in motorised transport.
  type: simple.MultiplicativeNode
  quantity: fraction
  unit: '%'
  input_dimensions: [transport_mode]
  output_dimensions: [transport_mode]
  input_nodes:
  - id: reduce_all_motorised_transport
    to_dimensions: []
    tags: [non_additive, arithmetic_inverse]
  - id: motorised_transport_index
    tags: [non_additive]
    to_dimensions:
    - id: transport_mode

- id: transport_air_pollution_unit_price
  name: Transport air pollution unit price
  description: 'Unit prices for air pollutants, noise, accidents, and CO2 come from a single source
    (Essen et al., 2019). Datasets can be created from 1.1 Reduce transport need G129:G134 (CO2 and air pollutants),
    G169:G179 (noise), G204:G209 (accidents). The values are constant across time.
    <h2>References</h2><ul><li>Essen et. al. (2019). Handbook on the external costs of transport. 
    For European Commission Directorate-General for Mobility and Transport</li></ul>'
  type: gpc.DatasetNode
  quantity: unit_price
  unit: EUR/t
  input_dimensions: [pollutant, cost_type]
  output_dimensions: [pollutant, cost_type]
  input_datasets: [nzc/defaults]
  params:
    gpc_sector: transport air pollution unit price

- id: transport_air_pollution_cost_shares
  name: Transport air pollution cost shares
  description: All cost shares are found on the sheet Data - Distribution stakeholder. All stakeholder
    distributions could be one
    dataset with an internal dimension "Outcome", which is used for filtering when data is fetched.
    See yaml for an example. All shares are constants across time.
  type: gpc.DatasetNode
  quantity: fraction
  unit: dimensionless
  input_dimensions: [stakeholder, cost_type]
  output_dimensions: [stakeholder, cost_type]
  input_datasets: [nzc/defaults]
  params:
    gpc_sector: transport air pollution cost shares

- id: transport_air_pollution_costs
  name: Transport air pollution costs
  description: TODO Air pollution costs also include CO2 even if it is calculated elsewhere. This results in double counting. CO2 should be removed from here.
  type: simple.MultiplicativeNode
  quantity: currency
  unit: MEUR/a
  input_dimensions: [stakeholder, pollutant, transport_mode, cost_type]
  output_dimensions: [stakeholder, pollutant, transport_mode, cost_type]
  input_nodes:
  - id: transport_air_pollution_unit_price
    to_dimensions:
    - id: cost_type
    - id: pollutant
  - id: transport_air_pollution_emissions
    from_dimensions:
    - id: energy_carrier
      flatten: true
    to_dimensions:
    - id: transport_mode
    - id: pollutant
  - id: transport_air_pollution_cost_shares
    to_dimensions:
    - id: cost_type
    - id: stakeholder
  output_nodes:
  - id: transport_cost
    from_dimensions:
    - id: pollutant
      flatten: true
    to_dimensions:
    - id: cost_type
    - id: stakeholder
    - id: transport_mode

- id: transport_co2_cost
  name: Transport CO2 cost
  type: simple.MultiplicativeNode
  quantity: currency
  unit: MEUR/a
  input_dimensions: [scope, transport_mode, cost_type]
  output_dimensions: [scope, transport_mode, cost_type]
  input_nodes:
  - id: transport_emissions
    from_dimensions:
    - id: ghg
      flatten: true
    - id: energy_carrier
      flatten: true
    to_dimensions:
    - id: scope
    - id: transport_mode
  - id: co2_unit_price
    to_dimensions:
    - id: scope
      categories: [scope1]
    - id: transport_mode
      categories: [cars]
    - id: cost_type
      categories: [co2_cost]
  output_nodes:
  - id: transport_cost
    from_dimensions:
    - id: scope
      flatten: true
    to_dimensions:
    - id: stakeholder
      categories: [city]
    - id: transport_mode
    - id: cost_type

- id: transport_noise_unit_price
  name: Transport noise unit price
  description: See transport_air_pollution_unit_price.
  type: gpc.DatasetNode
  quantity: unit_price
  unit: EUR/pkm
  input_dimensions: [transport_mode, cost_type]
  output_dimensions: [transport_mode, cost_type]
  input_datasets: [nzc/defaults]
  params:
    gpc_sector: transport noise unit price

- id: transport_noise_cost_shares
  name: Transport noise cost shares
  description: See transport_air_pollution_cost_shares
  type: gpc.DatasetNode
  quantity: fraction
  unit: dimensionless
  input_dimensions: [stakeholder, cost_type]
  output_dimensions: [stakeholder, cost_type]
  input_datasets: [nzc/defaults]
  params:
    gpc_sector: transport noise cost shares

- id: transport_noise_cost
  name: Transport noise cost
  type: simple.MultiplicativeNode
  quantity: currency
  unit: MEUR/a
  input_dimensions: [stakeholder, transport_mode, cost_type]
  output_dimensions: [stakeholder, transport_mode, cost_type]
  input_nodes:
  - id: transport_noise_unit_price
    to_dimensions:
    - id: cost_type
    - id: transport_mode
  - id: passenger_kilometres
    to_dimensions:
    - id: transport_mode
  - id: transport_noise_cost_shares
    to_dimensions:
    - id: stakeholder
    - id: cost_type
  output_nodes:
  - id: transport_cost
    to_categories:
    - transport_mode
    - stakeholder
    - cost_type

- id: transport_accident_unit_price
  name: Transport accident unit price
  description: See transport_air_pollution_unit_price.
  type: gpc.DatasetNode
  quantity: unit_price
  unit: EUR/pkm
  input_dimensions: [transport_mode, cost_type]
  output_dimensions: [transport_mode, cost_type]
  input_datasets: [nzc/defaults]
  params:
    gpc_sector: transport accident unit price

- id: transport_accident_cost_shares
  name: Transport accident cost shares
  description: See transport_air_pollution_cost_shares
  type: gpc.DatasetNode
  quantity: fraction
  unit: dimensionless
  input_dimensions: [stakeholder, cost_type]
  output_dimensions: [stakeholder, cost_type]
  input_datasets: [nzc/defaults]
  params:
    gpc_sector: transport accident cost shares

- id: transport_accident_cost
  name: Transport accident cost
  type: simple.MultiplicativeNode
  quantity: currency
  unit: MEUR/a
  input_dimensions: [stakeholder, transport_mode, cost_type]
  output_dimensions: [stakeholder, transport_mode, cost_type]
  input_nodes:
  - id: transport_accident_unit_price
    to_dimensions:
    - id: transport_mode
    - id: cost_type
  - id: passenger_kilometres
    to_dimensions:
    - id: transport_mode
  - id: transport_accident_cost_shares
    to_dimensions:
    - id: stakeholder
    - id: cost_type
  output_nodes:
  - id: transport_cost
    to_dimensions:
    - id: stakeholder
    - id: transport_mode
    - id: cost_type

- id: public_transport_operation_unit_price
  name: Public transport operation unit price
  description: Operational costs of buses and trains come from Sveriges kommuner och landsting (2017)
    and values are at 1.1 Reduce transport need G236:G241. The values are constant across time.
    <h2>References</h2><ul><li>Essen et. al. (2019). Handbook on the external costs of transport. 
    For European Commission Directorate-General for Mobility and Transport</li>
    <li>Sveriges kommuner och landsting (2017). Kollektivtrafikens kostnadsutveckling – en överblick. https://webbutik.skl.se/sv/artiklar/kollektivtrafikens-kostnadsutveckling-en-overblick.html</li></ul>'
  type: gpc.DatasetNode
  quantity: unit_price
  unit: EUR/vkm
  input_dimensions: [transport_mode, cost_type]
  output_dimensions: [transport_mode, cost_type]
  input_datasets: [nzc/defaults]
  params:
    gpc_sector: public transport operation unit price

- id: public_transport_operation_cost_shares
  name: Public transport operation cost shares
  description: See transport_air_pollution_cost_shares
  type: gpc.DatasetNode
  quantity: fraction
  unit: dimensionless
  input_dimensions: [stakeholder, cost_type]
  output_dimensions: [stakeholder, cost_type]
  input_datasets:
  - id: nzc/defaults
  params:
    gpc_sector: public transport operation cost shares

- id: public_transport_operation_cost
  name: Public transport operation cost
  description: Operation cost to all stakeholders.
  type: simple.MultiplicativeNode
  quantity: currency
  unit: MEUR/a
  input_dimensions: [transport_mode, stakeholder, cost_type]
  output_dimensions: [transport_mode, stakeholder, cost_type]
  input_nodes:
  - id: public_transport_operation_unit_price
    to_dimensions:
    - id: transport_mode
    - id: cost_type
  - id: vehicle_kilometres
    from_dimensions:
    - id: energy_carrier  # FIXME Check that the costs are the same for electric buses
      flatten: true
    - id: transport_mode
      categories: [buses, trains]
    to_dimensions:
    - id: transport_mode
  - id: public_transport_operation_cost_shares
    to_dimensions:
    - id: stakeholder
    - id: cost_type
  output_nodes: [transport_cost]

- id: transport_energy_factor_ice_petrol_diesel
  name: Transport energy factor - ICE petrol/diesel
  description: Values come from European Commission (2019) and are found from 1.1 Reduce transport need G266.
    <h2>References</h2>
    European commission (2019) - Reducing CO2 emissions from passenger cars.
    https://ec.europa.eu/clima/policies/transport/vehicles/cars_en
  type: gpc.DatasetNode
  quantity: emission_factor
  unit: l/g
  input_datasets: [nzc/defaults]
  params:
    gpc_sector: transport energy factor ice petrol diesel

- id: fuel_unit_price
  name: Fuel unit price
  description: The values come from Eurostat (2019) - Electricity prices for household consumers
    and are found from MIA D430.
  type: gpc.DatasetNode
  quantity: unit_price
  unit: EUR/l
  input_dimensions: [cost_type]
  output_dimensions: [cost_type]
  input_datasets: [nzc/defaults]
  params:
    gpc_sector: fuel unit price

- id: transport_fuel_cost
  name: Transport fuel cost
  type: simple.MultiplicativeNode
  quantity: currency
  unit: MEUR/a
  input_dimensions: [stakeholder, transport_mode, cost_type]
  output_dimensions: [stakeholder, transport_mode, cost_type]
  input_nodes:
  - id: transport_emission_factor
    from_dimensions:
    - id: pollutant
      categories: [co2]
      flatten: true
    - id: energy_carrier
      categories: [petrol_diesel]
      flatten: true
    to_dimensions:
    - id: transport_mode
  - id: transport_energy_factor_ice_petrol_diesel
    to_dimensions:
    - id: transport_mode
      categories: [cars]
  - id: vehicle_kilometres
    from_dimensions:
    - id: energy_carrier
      categories: [petrol_diesel]
      flatten: true
    to_dimensions:
    - id: transport_mode
  - id: fuel_unit_price
    to_dimensions:
    - id: transport_mode
      categories: [cars]
    - id: stakeholder
      categories: [citizens]
    - id: cost_type
  output_nodes: [transport_cost]

- id: walking_cycling_unit_price
  name: Walking & cycling unit price
  description: 'Value of cycling and walking is 0.5 and 0.2 USD/pkm, respectively
    (Victoria Transport Policy Institute, 2019). Unit price is constant across time.
    Victoria Transport Policy Institute (2019). Evaluating Active Transport Benefits and Costs.
    https://www.vtpi.org/nmt-tdm.pdf This value is supported by another study, which evaluates the
    health-benefits to 0.3-0.5 €/pkm: https://www.researchgate.net/publication/330184791_The_Social_Cost_of_Automobility_Cycling_and_Walking_in_the_European_Union. From these sources, a summary estimate of 0.2966 EUR/pkm is derived.'
  type: gpc.DatasetNode
  quantity: unit_price
  unit: EUR/pkm
  input_datasets: [nzc/defaults]
  input_dimensions: [transport_mode, stakeholder, cost_type]
  output_dimensions: [transport_mode, stakeholder, cost_type]
  params:
    gpc_sector: walking cycling unit price

- id: walking_cycling_cost
  name: Walking & cycling cost
  type: simple.MultiplicativeNode
  quantity: currency
  unit: MEUR/a
  input_dimensions: [stakeholder, transport_mode, cost_type]
  output_dimensions: [stakeholder, transport_mode, cost_type]
  input_nodes:
  - id: walking_cycling_unit_price
    to_dimensions:
    - id: transport_mode
    - id: stakeholder
    - id: cost_type
  - id: passenger_kilometres
    to_dimensions:
    - id: transport_mode
    - id: stakeholder
      categories: [citizens]
  output_nodes: [transport_cost]

- id: transport_cost
  name: Transport cost
  type: simple.AdditiveNode
  quantity: currency
  unit: MEUR/a
  input_dimensions: [stakeholder, transport_mode, cost_type]
  output_dimensions: [stakeholder, transport_mode, cost_type]
  output_nodes:
  - id: total_cost
    from_dimensions:
    - id: transport_mode
      flatten: true
    to_dimensions:
    - id: cost_type
    - id: stakeholder

- id: transport_mode_fraction
  name: Transport mode fraction
  type: simple.MixNode
  quantity: mix
  unit: '%'
  input_dimensions: [transport_mode]
  output_dimensions: [transport_mode]
  input_nodes:
  - id: passenger_kilometres_pre
    tags: activity

actions:  # FIXME It would be nice to have multiplier parameter in the DatasetAction class.
- id: reduce_all_motorised_transport
  name: Reduce all motorised transport
  type: simple.LinearCumulativeAdditiveAction  # FIXME Allow historical values in this node class.
  quantity: fraction
  unit: '%'
  group: transport
  historical_values: [[2020, 0], [2022, 0]]
  forecast_values: [[2023, 0], [2030, 1.0]]
  input_dataset_processors: [LinearInterpolation]
  params:
  - id: multiplier
    value: -35.0
    unit: dimensionless
    min_value: -50
    max_value: 0
    label: Reduction percentage
    is_visible: true
    is_customizable: true

- id: modal_switch_from_cars_to_other_modes  # FIXME Something strange on the UI. Check.
  name: Modal switch from cars to other modes
  description: Ca. 50 % of passsenger kilometres are by car, and 30 % of that is shifted to other transport modes. The shifted percentages add up. However, if the different transport mode activities change due to other reasons, the absolute passenger kilometres may change due to this action. TODO Check if this is OK, as in the excel, the shifts are absolute passenger kilometres and therefore always add up.
  type: shift.ShiftAction
  quantity: mix
  unit: '%'
  group: transport
  params:
  - id: shift
    unit: '%'
    is_customizable: false
    value:
    - source:
        categories:
          transport_mode: cars
      dests:
      - categories:
          transport_mode: buses
      - categories:
          transport_mode: trains
      - categories:
          transport_mode: walking
      amounts:
      - {year: 2024, source_amount: -2.15, dest_amounts: [10, 60, 30]}
      - {year: 2025, source_amount: -2.15, dest_amounts: [10, 60, 30]}
      - {year: 2026, source_amount: -2.15, dest_amounts: [10, 60, 30]}
      - {year: 2027, source_amount: -2.15, dest_amounts: [10, 60, 30]}
      - {year: 2028, source_amount: -2.15, dest_amounts: [10, 60, 30]}
      - {year: 2029, source_amount: -2.15, dest_amounts: [10, 60, 30]}
      - {year: 2030, source_amount: -2.15, dest_amounts: [10, 60, 30]}
  output_nodes:
  - transport_mode_fraction

- id: car_pooling
  name: Car pooling
  description: The baseline value for car occupancy is 1.2 pkm/vkm. Therefore, 25 % improvement is 0.3 pkm/vkm. TODO If the baseline changes, the percentages will be from the wrong value.
  type: simple.LinearCumulativeAdditiveAction
  quantity: fraction
  unit: pkm/vkm
  group: transport
  forecast_values: [[2023, 0], [2030, 1.2]]
  output_nodes:
  - id: transport_efficiency
    to_dimensions:
    - id: transport_mode
      categories: [cars]
  params:
  - id: multiplier
    is_customizable: true
    unit: '%'
    value: 25.0
    min_value: 0
    max_value: 50

- id: electrification_of_passenger_cars
  name: Electrification of passenger cars
  type: shift.ShiftAction
  quantity: fraction
  unit: '%'
  group: transport
  params:
  - id: shift
    unit: '%'
    is_customizable: false
    value:
    - source:
        categories:
          transport_mode: cars
          energy_carrier: petrol_diesel
      dests:
      - categories:
          transport_mode: cars
          energy_carrier: electricity
      amounts:
      - {year: 2024, source_amount: -8.4, dest_amounts: [100]}
      - {year: 2025, source_amount: -4.3, dest_amounts: [100]}
      - {year: 2026, source_amount: -5.0, dest_amounts: [100]}
      - {year: 2027, source_amount: -7.3, dest_amounts: [100]}
      - {year: 2028, source_amount: -10.9, dest_amounts: [100]}
      - {year: 2029, source_amount: -12.2, dest_amounts: [100]}
      - {year: 2030, source_amount: -13.1, dest_amounts: [100]}
  output_nodes:
  - transport_energy_carrier_shares

- id: electrification_of_buses
  name: Electrification of buses
  type: shift.ShiftAction
  quantity: emission_factor
  unit: '%'
  group: transport
  params:
  - id: shift
    unit: '%'
    is_customizable: false
    value:
    - source:
        categories:
          transport_mode: buses
          energy_carrier: petrol_diesel
      dests:
      - categories:
          transport_mode: buses
          energy_carrier: electricity
      amounts:
      - {year: 2024, source_amount: -23.0, dest_amounts: [100]}
      - {year: 2025, source_amount: -10.0, dest_amounts: [100]}
      - {year: 2026, source_amount: -10.0, dest_amounts: [100]}
      - {year: 2027, source_amount: -10.0, dest_amounts: [100]}
      - {year: 2028, source_amount: -15.0, dest_amounts: [100]}
      - {year: 2029, source_amount: -15.0, dest_amounts: [100]}
      - {year: 2030, source_amount: -17.0, dest_amounts: [100]}
  output_nodes:
  - transport_energy_carrier_shares
