# Required nodes from outside the framework:
# net_emissions
# electricity_production_emission_factor
# Required dimensions from outside the framework:
# building_energy_class
# heating_type
# ghg
# scope
# Required parameters from outside the framework:
# population_growth_rate

emission_sectors:

- id: building_emissions
  name: Building emissions
  description: 'This module (all nodes upstream) is based on the excel sheets 3.0 - 3.4 Building & heat levers.'
  part_of: net_emissions

nodes:

# * = data is in the city request dataset
# Model inputs: 176* 519 257* 254* 532 544 545 272* 273* 278 290 296..299* 302..305* 319..322* 586
# 3.4 heat generation: (coming from model inputs) 19 25 248 259

# ----------------- Building stock ----------------------

- id: existing_building_stock
  name: Existing building stock
  description: 'Data sources:<ul><li>Model inputs & assumptions, F250. Size of building stock. 
    </li><li>Model inputs & assumptions, F519. Rate of demolition and new construction.</li><li>Model inputs & assumptions, F257. Retrofitted area %.</li></ul>
    Calculations: The logic is that the floor area per inhabitant stays constant. Amount of construction is a fixed fraction of existing building stock and the difference between building stock increase and construction is assumed to be demolished. So, logically, construction must be greater than or equal to population growth.'
  type: gpc.DatasetNode
  quantity: floor_area
  unit: km**2
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_datasets:
  - id: nzc/defaults
    forecast_from: 2023
  params:
    gpc_sector: size of building stock

- id: projected_building_stock
  name: Projected building stock
  type: costs.ExponentialNode
  quantity: floor_area
  unit: km**2
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_nodes:
  - id: existing_building_stock
  params:
  - id: annual_change
    ref: population_growth_rate
  - id: inventory_only
    value: false

- id: new_building_shares
  name: New building shares
  type: gpc.DatasetNode
  quantity: fraction
  unit: dimensionless
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_datasets:
  - id: nzc/defaults
    forecast_from: 2023
  params:
    gpc_sector: new building shares
    inventory_only: true

- id: demolition_rate
  name: Demolition rate
  type: gpc.DatasetNode
  quantity: fraction
  unit: dimensionless
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_datasets:
  - id: nzc/defaults
    forecast_from: 2023
  params:
    gpc_sector: Demolition rate existing buildings

- id: demolished_building_stock
  name: Demolished building stock
  type: simple.MultiplicativeNode
  quantity: floor_area
  unit: km**2
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_nodes:
  - id: projected_building_stock
    tags: [non_additive]
  - id: demolition_rate

- id: new_building_stock
  name: New building stock
  type: formula.FormulaNode
  quantity: floor_area
  unit: km**2
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_nodes:
  - id: projected_building_stock
    tags: [difference]
    from_dimensions:
    - id: building_energy_class
      flatten: true
    to_dimensions: []
  - id: demolished_building_stock
    from_dimensions:
    - id: building_energy_class
      flatten: true
    to_dimensions: []
  - id: new_building_shares
    tags: [extend_values]
  params:
  - id: formula
    value: (projected_building_stock + demolished_building_stock) * new_building_shares

- id: building_stock
  name: Building stock
  description: Existing building stock minus demolition plus new construction.
  type: simple.AdditiveNode
  quantity: floor_area
  unit: km**2
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_nodes:
  - id: existing_building_stock
    tags: [extend_values]
  - id: new_building_stock
    tags: [cumulative]
  - id: demolished_building_stock
    tags: [arithmetic_inverse, cumulative]
  - id: renovated_building_stock
    tags: [extend_values, cumulative]
    to_dimensions:
    - id: building_energy_class

- id: old_building_renovation_rate
  name: Old building renovation rate
  description: Shifts building stock from non-renovated to minor or agressively renovated stock. The effect is cumulative, i.e. the renovated stock stays permanently in the new category and thus the stock accumulates to renovated categories.
  type: gpc.DatasetNode
  quantity: fraction
  unit: dimensionless
  input_datasets:
  - id: nzc/defaults
    forecast_from: 2023
  params:
    gpc_sector: renovation rate (building envelope)

- id: renovation_intensity
  name: Renovation intensity
  type: gpc.DatasetNode
  quantity: fraction
  unit: dimensionless
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_datasets:
  - id: nzc/defaults
    forecast_from: 2023
  params:
    gpc_sector: renovation intensity  # FIXME get correct data from renovation intensity baseline

- id: renovated_building_stock
  name: Renovated building stock
  type: simple.MultiplicativeNode
  quantity: floor_area
  unit: km**2
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_nodes:
  - id: existing_building_stock
    tags: [non_additive]
    from_dimensions:
    - id: building_energy_class
      categories: [old_no_renovations]
      flatten: true
    to_dimensions: []
  - id: old_building_renovation_rate
    to_dimensions: []
  - id: renovation_intensity

# --------------------- Heating ---------------------

- id: energy_use_intensity_data  # FIXME Calculate from relative changes, not data
  name: Energy use intensity data for heating
  type: gpc.DatasetNode
  quantity: energy_factor
  unit: kWh/m**2/a
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_datasets:
  - id: nzc/defaults
    forecast_from: 2023
  params:
    gpc_sector: energy use intensity

- id: energy_use_intensity_relative_old
  name: Relative energy use intensity of existing building classes
  type: gpc.DatasetNode
  quantity: fraction
  unit: dimensionless
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_datasets:
  - id: nzc/defaults
    forecast_from: 2023
  params:
    gpc_sector: Energy efficiency improvements from building renovations

- id: energy_use_intensity_old
  name: Energy use intensity of existing buildings
  type: simple.MultiplicativeNode
  quantity: energy_factor
  unit: kWh/m**2/a
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_nodes:
  - id: energy_use_intensity_data
    tags: [non_additive]
    from_dimensions:
    - id: building_energy_class
      categories: [old_no_renovations]
      flatten: true
    to_dimensions: []
  - id: energy_use_intensity_relative_old
    tags: [complement]

- id: energy_use_intensity_change_new
  name: Energy use intensity change for new buildings
  type: gpc.DatasetNode
  quantity: fraction
  unit: dimensionless
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_datasets:
  - id: nzc/defaults  # FIXME This could be zero by default and be changed by action
    forecast_from: 2023
  params:
    gpc_sector: improvement compared with new standard  # FIXME update defaults/actions

- id: energy_use_intensity_new
  name: Energy use intensity for heating of new buildings
  type: simple.MultiplicativeNode
  quantity: energy_factor
  unit: kWh/m**2/a
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_nodes:
  - id: energy_use_intensity_data
    tags: [non_additive]
  - id: energy_use_intensity_change_new
    tags: [complement]

- id: energy_use_intensity
  name: Energy use intensity for heating of old and new buildings
  type: simple.AdditiveNode
  quantity: energy_factor
  unit: kWh/m**2/a
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_nodes:
  - id: energy_use_intensity_new
  - id: energy_use_intensity_old

- id: building_heating_type_share
  name: Building heating type share
  description: Assumes 1 % district and 99 % local heating. Data comes from the user.
  type: gpc.DatasetNode
  quantity: fraction
  unit: dimensionless
  input_dimensions: [heating_type, scope]
  output_dimensions: [heating_type, scope]
  input_datasets:
  - id: nzc/defaults
    forecast_from: 2023
  params:
    gpc_sector: building heating shares

- id: building_heat_energy_use
  name: Building heat energy use
  description: 'For the frozen scenario, heat energy is relative to population growth.'
  type: simple.MultiplicativeNode
  quantity: energy
  unit: GWh/a
  input_dimensions: [heating_type, building_energy_class, scope]
  output_dimensions: [heating_type, building_energy_class, scope]
  input_nodes:
  - id: building_stock
    to_dimensions:
    - id: building_energy_class
  - id: energy_use_intensity
    to_dimensions:
    - id: building_energy_class
  - id: building_heating_type_share
    to_dimensions:
    - id: heating_type
    - id: scope

- id: heating_emission_factor
  name: Heating emission factor
  description: Emission factor for building heating
  type: gpc.DatasetNode
  quantity: emission_factor
  unit: g/kWh
  input_dimensions: [pollutant, heating_type]
  output_dimensions: [pollutant, heating_type]
  input_datasets:
  - id: nzc/defaults
    forecast_from: 2023
  params:
    gpc_sector: heat emission factor

- id: building_heating_emissions
  name: Building heating emissions
  type: simple.MultiplicativeNode
  quantity: emissions
  unit: kt/a
  input_dimensions: [heating_type, pollutant, scope]
  output_dimensions: [heating_type, pollutant, scope]
  input_nodes:
  - id: building_heat_energy_use
    from_dimensions:
    - id: building_energy_class
      flatten: true
    to_dimensions:
    - id: heating_type
    - id: scope
  - id: heating_emission_factor
    to_dimensions:
    - id: pollutant
    - id: heating_type
  output_nodes:
  - id: building_emissions
    from_dimensions:
    - id: pollutant
      categories: [co2]
      flatten: true
    - id: heating_type
      flatten: true
    to_dimensions:
    - id: ghg
      categories: [co2e]
    - id: scope

- id: new_building_current_unit_price
  name: Building current unit price
  type: gpc.DatasetNode
  quantity: unit_price
  unit: EUR/m**2
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_datasets:
  - id: nzc/defaults
    forecast_from: 2023
  params:
    gpc_sector: Building costs - new buildings

- id: new_building_unit_price
  name: New building unit price
  type: costs.ExponentialNode
  quantity: unit_price
  unit: EUR/m**2
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_nodes:
  - id: new_building_current_unit_price
  params:
  - id: annual_change  # FIXME from nzc/defaults Cost improvements - new buildings
    value: -1.024671139
    unit: '%'

- id: new_building_cost_shares
  name: Building current cost_shares
  type: gpc.DatasetNode
  quantity: fraction
  unit: dimensionless
  input_dimensions: [stakeholder, cost_type]
  output_dimensions: [stakeholder, cost_type]
  input_datasets:
  - id: nzc/defaults
    forecast_from: 2023
  params:
    gpc_sector: investment costs in new buildings
#building renovation investments


- id: new_building_cost
  name: New building cost
  type: simple.MultiplicativeNode
  quantity: currency
  unit: MEUR
  input_dimensions: [building_energy_class, stakeholder, cost_type]
  output_dimensions: [building_energy_class, stakeholder, cost_type]
  input_nodes:
  - id: new_building_stock
    to_dimensions:
    - id: building_energy_class
  - id: new_building_unit_price
    to_dimensions:
    - id: building_energy_class
  - id: new_building_cost_shares
    to_dimensions:
    - id: stakeholder
    - id: cost_type

# -------------------- Electricity --------------------

- id: consumer_electricity_intensity_baseline
  name: Electricity use intensity for lighting & appliances
  type: gpc.DatasetNode
  quantity: energy_factor
  unit: kWh/m**2/a
  input_dimensions: [energy_carrier]
  output_dimensions: [energy_carrier]
  input_datasets:
  - id: nzc/defaults
    forecast_from: 2023
  params:
    gpc_sector: consumer electricity use

- id: efficient_appliances_rate
  name: Efficient appliances rate
  type: gpc.DatasetNode
  quantity: fraction
  unit: dimensionless  # FIXME 1/a
  input_dimensions: [building_energy_class]
  output_dimensions: [building_energy_class]
  input_datasets:
  - id: nzc/defaults
    forecast_from: 2023
  params:
    gpc_sector: efficient appliances rate

- id: efficiency_programme_shares
  name: Efficiency programme shares
  description: FIXME The excel logic of action 3.3 changes 1) the fraction of aggressive improvement in energy efficienay, 2) the amount of electricity contumper per squaremetre after improvement and 3) the cost of Improvement. In constrast, it does NOT affect the floor area renovated (old buildings) or built (new buildings), just the fraction of minor and aggressive shares. How should we implement this? The energy improvement can be adjusted by the user, as well as the unit price of improvement. 
  type: gpc.DatasetNode
  quantity: fraction
  unit: dimensionless
  input_dimensions: [efficiency_programme, energy_carrier]
  output_dimensions: [efficiency_programme, energy_carrier]
  input_datasets:
  - id: nzc/defaults
    forecast_from: 2023
  params:
    gpc_sector: efficiency programme shares

- id: efficiency_improved_buildings
  name: Efficiency improved buildings
  type: simple.MultiplicativeNode
  quantity: floor_area
  unit: km**2
  input_dimensions: [efficiency_programme, energy_carrier, building_energy_class]
  output_dimensions: [efficiency_programme, energy_carrier, building_energy_class]
  input_nodes:
  - id: building_stock
    tags: [non_additive]
    to_dimensions:
    - id: building_energy_class
  - id: efficient_appliances_rate
    to_dimensions:
    - id: building_energy_class
  - id: efficiency_programme_shares
    to_dimensions:
    - id: efficiency_programme
    - id: energy_carrier

- id: reduced_electricity_need
  name: Reduced electricity need
  type: gpc.DatasetNode
  quantity: fraction
  unit: dimensionless
  input_dimensions: [efficiency_programme, energy_carrier]
  output_dimensions: [efficiency_programme, energy_carrier]
  input_datasets:
  - id: nzc/defaults
    forecast_from: 2023
  params:
    gpc_sector: Reduced electricity need with appliances & lighting renovations ## FIXME Reduced electricity need with appliances; after updating the dataset

- id: efficiency_programme_current_unit_price
  name: Efficiency programme current unit price
  type: gpc.DatasetNode
  quantity: unit_price
  unit: EUR/m**2
  input_dimensions: [efficiency_programme, energy_carrier]
  output_dimensions: [efficiency_programme, energy_carrier]
  input_datasets:
  - id: nzc/defaults
    forecast_from: 2023
  params:
    gpc_sector: Cost of efficiency programme per m2

- id: efficiency_programme_unit_price
  name: Efficiency programme unit price
  type: costs.ExponentialNode
  quantity: unit_price
  unit: EUR/m**2
  input_dimensions: [efficiency_programme, energy_carrier]
  output_dimensions: [efficiency_programme, energy_carrier]
  input_nodes:
  - id: efficiency_programme_current_unit_price
  params:
  - id: annual_change  # FIXME from nzc/defaults Cost improvements of efficiency programme
    value: 1.024671139
    unit: '%'
  - id: is_decreasing_rate
    value: true

- id: old_building_cost_shares
  name: Old building cost_shares
  type: gpc.DatasetNode
  quantity: fraction
  unit: dimensionless
  input_dimensions: [stakeholder, cost_type]
  output_dimensions: [stakeholder, cost_type]
  input_datasets:
  - id: nzc/defaults
    forecast_from: 2023
  params:
    gpc_sector: building renovation investments

- id: efficiency_programme_cost
  name: Efficiency programme cost
  type: simple.MultiplicativeNode
  quantity: currency
  unit: MEUR
  input_dimensions: [efficiency_programme, energy_carrier, stakeholder, cost_type]
  output_dimensions: [efficiency_programme, energy_carrier, stakeholder, cost_type]
  input_nodes:
  - id: efficiency_improved_buildings
    from_dimensions:
    - id: building_energy_class
      flatten: true
    to_dimensions:
    - id: efficiency_programme
    - id: energy_carrier
  - id: efficiency_programme_unit_price
    to_dimensions:
    - id: efficiency_programme
    - id: energy_carrier
  - id: old_building_cost_shares
    to_dimensions:
    - id: stakeholder
    - id: cost_type

- id: consumer_electricity_intensity
  name: Consumer electricity intensity
  type: simple.MultiplicativeNode
  quantity: energy_factor
  unit: kWh/m**2/a
  input_dimensions: [efficiency_programme, energy_carrier]
  output_dimensions: [efficiency_programme, energy_carrier]
  input_nodes:
  - id: consumer_electricity_intensity_baseline
    tags: [non_additive]
    to_dimensions: 
    - id: energy_carrier
  - id: reduced_electricity_need
    tags: [complement]
    to_dimensions:
    - id: efficiency_programme
    - id: energy_carrier

- id: consumer_electricity_use
  name: Electricity use for lighting & appliances
  type: formula.FormulaNode
  quantity: energy
  unit: GWh/a
  input_dimensions: [efficiency_programme, energy_carrier]
  output_dimensions: [efficiency_programme, energy_carrier]
  input_nodes:
  - id: consumer_electricity_intensity
    to_dimensions:
    - id: efficiency_programme
    - id: energy_carrier
  - id: building_stock
    from_dimensions:
    - id: building_energy_class
      flatten: true
    to_dimensions:
    - id: efficiency_programme
      categories: [no_improvement]
    - id: energy_carrier
      categories: [electricity]
  - id: efficiency_improved_buildings
    tags: [cumulative]
    from_dimensions:
    - id: building_energy_class
      flatten: true
    to_dimensions:
    - id: efficiency_programme
    - id: energy_carrier
  output_nodes:
  - id: total_electricity_consumption
    from_dimensions:
    - id: efficiency_programme
      flatten: true
  params:
  - id: formula
    value: (building_stock + efficiency_improved_buildings) * consumer_electricity_intensity

- id: consumer_electricity_emissions
  name: Consumer electricity emissions
  type: simple.MultiplicativeNode
  quantity: emissions
  unit: kt/a
  input_dimensions: [pollutant, energy_carrier]
  output_dimensions: [pollutant, energy_carrier]
  input_nodes:
  - id: consumer_electricity_use
    from_dimensions:
    - id: efficiency_programme
      flatten: true
    to_dimensions:
    - id: energy_carrier
  - id: electricity_production_emission_factor
  output_nodes:
  - id: building_emissions
    from_dimensions:
    - id: pollutant
      categories: [co2]
      flatten: true
    - id: energy_carrier
      flatten: true
    to_dimensions:
    - id: ghg
      categories: [co2e]
    - id: scope
      categories: [scope2]

- id: building_air_pollutant_emissions
  name: Building air pollutant emissions
  type: simple.AdditiveNode
  quantity: emissions
  unit: kt/a
  input_dimensions: [pollutant]
  output_dimensions: [pollutant]
  input_nodes:
  - id: building_heating_emissions
    from_dimensions:
    - id: heating_type
      flatten: true
    - id: scope
      flatten: true
    - id: pollutant
      categories: [nox, pm25_combustion, pm10_combustion]
  - id: consumer_electricity_emissions
    from_dimensions:
    - id: energy_carrier
      flatten: true
    - id: pollutant
      categories: [nox, pm25_combustion, pm10_combustion]

# ---------------- Summary ---------------------

- id: building_cost  # TODO Add stakeholders and topic-wise costs
  name: Building cost
  type: simple.AdditiveNode
  quantity: currency
  unit: MEUR  # FIXME MEUR/a
  input_dimensions: [stakeholder, cost_type]
  output_dimensions: [stakeholder, cost_type]
  input_nodes:
  - id: new_building_cost
    from_dimensions:
    - id: building_energy_class
      flatten: true
  - id: efficiency_programme_cost
    from_dimensions:
    - id: efficiency_programme
      flatten: true
    - id: energy_carrier
      flatten: true
    to_dimensions:  # FIXME Allocate categories correctly
    - id: stakeholder
    - id: cost_type
#  output_nodes:
#  - total_cost

actions:

- id: renovation_rate_improvement
  name: Renovation rate improvement
  description: 'Default 1 %, BPIE (2011) - Europe´s buildings under the microscope. http://bpie.eu/wp-content/uploads/2015/10/HR_EU_B_under_microscope_study.pdf'
  type: simple.CumulativeAdditiveAction
  quantity: fraction
  unit: '%'
  group: buildings
  forecast_values: [[2023, 1.5]]  # FIXME Should add param multiplier to get a slider
  output_nodes: [old_building_renovation_rate]

- id: renovation_shares_improvement
  name: Renovation shares improvement
  type: shift.ShiftAction
  quantity: fraction
  unit: '%'
  output_nodes: [renovation_intensity]
  group: buildings
  params:
  - id: shift
    unit: '%'
    is_customizable: false
    value:
    - source:
        categories:
          building_energy_class: minor_renovation
      dests:
      - categories:
          building_energy_class: major_renovation
      amounts:
      - {year: 2023, source_amount: -35.0, dest_amounts: [100]} 
      - {year: 2024, source_amount: 0.0, dest_amounts: [100]} 

- id: new_building_shares_improvement
  name: New building shares improvement
  type: shift.ShiftAction
  quantity: fraction
  unit: '%'
  output_nodes: [new_building_shares]
  group: buildings
  params:
  - id: shift
    unit: '%'
    is_customizable: false
    value:
    - source:
        categories:
          building_energy_class: new_standard
      dests:
      - categories:
          building_energy_class: new_top_performance
      amounts:
      - {year: 2023, source_amount: -30.0, dest_amounts: [100]} 
      - {year: 2024, source_amount: 0.0, dest_amounts: [100]} 

- id: top_performance_improvement
  name: Top performance standard improvement compared with the regular new buildings
  type: simple.CumulativeAdditiveAction
  quantity: fraction
  unit: '%'
  historical_values: [[2021, 0], [2022, 0]]
  forecast_values: [[2023, 50]]
  output_nodes:
  - id: energy_use_intensity_change_new
    to_dimensions:
    - id: building_energy_class
      categories: [new_top_performance]

- id: electricity_need_reduction_minor
  name: 3.3 Electricity need reduction, minor improvement
  description: FIXME All renovated and newly built buildings are improved for electricity use. The question is, what fraction is minor and what is major improvement. The other question is, how much there is improvement. Take only the non-renovated from defaults/assumptions Reduced electricity need with appliances; and the minor and major improvement from these actions.
  type: simple.CumulativeAdditiveAction
  quantity: fraction
  unit: '%'
  group: buildings
  forecast_values: [[2023, 13.0]]
  output_nodes:
  - id: reduced_electricity_need
    to_dimensions:
    - id: efficiency_programme
      categories: [minor_improvements]
    - id: energy_carrier
      categories: [electricity]

- id: electricity_need_reduction_major
  name: 3.3 Electricity need reduction, major improvement
  type: simple.CumulativeAdditiveAction
  quantity: fraction
  unit: '%'
  group: buildings
  forecast_values: [[2023, 38.0]]
  output_nodes:
  - id: reduced_electricity_need
    to_dimensions:
    - id: efficiency_programme
      categories: [aggressive_improvements]
    - id: energy_carrier
      categories: [electricity]
